@use '../../variables.scss';
@use '../../mixins.scss';

.contact {
  background-color: variables.$color-background;
  position: relative;
  
  &__content {
    display: grid;
    grid-template-columns: 1fr;
    gap: variables.$spacing-12;
    
    @include mixins.md {
      grid-template-columns: 1fr 1.5fr;
    }
  }
  
  &__info {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s ease-out;
    
    .contact--animated & {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  &__info-heading {
    margin-bottom: variables.$spacing-6;
    
    h3 {
      font-size: variables.$font-size-xl;
      font-weight: variables.$font-weight-semibold;
      color: variables.$color-text;
      margin-bottom: variables.$spacing-2;
    }
    
    p {
      @include mixins.body-text;
      color: variables.$color-text-light;
    }
  }
  
  &__info-items {
    display: flex;
    flex-direction: column;
    gap: variables.$spacing-6;
    margin-bottom: variables.$spacing-8;
  }
  
  &__info-item {
    display: flex;
    align-items: flex-start;
    gap: variables.$spacing-4;
  }
  
  &__info-icon {
    flex-shrink: 0;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: rgba(variables.$color-primary, 0.1);
    color: variables.$color-primary;
    @include mixins.flex-center;
    
    svg {
      width: 24px;
      height: 24px;
      stroke: currentColor;
    }
  }
  
  &__info-content {
    h4 {
      font-size: variables.$font-size-base;
      font-weight: variables.$font-weight-semibold;
      color: variables.$color-text;
      margin-bottom: variables.$spacing-1;
    }
    
    p {
      @include mixins.body-text;
      color: variables.$color-text-light;
    }
  }
  
  &__info-link {
    color: variables.$color-text-light;
    text-decoration: none;
    transition: variables.$transition-base;
    
    &:hover {
      color: variables.$color-primary;
    }
  }
  
  &__social {
    margin-top: variables.$spacing-8;
    
    h4 {
      font-size: variables.$font-size-base;
      font-weight: variables.$font-weight-semibold;
      color: variables.$color-text;
      margin-bottom: variables.$spacing-4;
    }
  }
  
  &__social-links {
    display: flex;
    gap: variables.$spacing-4;
  }
  
  &__social-link {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: rgba(variables.$color-primary, 0.1);
    color: variables.$color-primary;
    @include mixins.flex-center;
    transition: variables.$transition-base;
    
    &:hover {
      background-color: variables.$color-primary;
      color: variables.$color-background;
      transform: translateY(-3px);
    }
    
    svg {
      width: 20px;
      height: 20px;
      stroke: currentColor;
    }
  }
  
  &__form-container {
    opacity: 0;
    transform: translateX(30px);
    transition: all 0.8s ease-out 0.2s;
    
    .contact--animated & {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  &__form {
    background-color: variables.$color-background;
    border-radius: variables.$border-radius-lg;
    padding: variables.$spacing-8;
    box-shadow: variables.$shadow-lg;
  }
  
  &__alert {
    padding: variables.$spacing-4;
    border-radius: variables.$border-radius;
    margin-bottom: variables.$spacing-6;
    
    &--success {
      background-color: rgba(variables.$color-success, 0.1);
      color: variables.$color-success;
      border: 1px solid rgba(variables.$color-success, 0.2);
    }
    
    &--error {
      background-color: rgba(variables.$color-error, 0.1);
      color: variables.$color-error;
      border: 1px solid rgba(variables.$color-error, 0.2);
    }
  }
  
  &__form-group {
    margin-bottom: variables.$spacing-6;
  }
  
  &__form-label {
    display: block;
    font-size: variables.$font-size-sm;
    font-weight: variables.$font-weight-medium;
    color: variables.$color-text;
    margin-bottom: variables.$spacing-2;
  }
  
  &__form-input,
  &__form-textarea {
    width: 100%;
    padding: variables.$spacing-3 variables.$spacing-4;
    border: 1px solid variables.$color-border;
    border-radius: variables.$border-radius;
    background-color: variables.$color-background;
    font-family: variables.$font-family-base;
    font-size: variables.$font-size-base;
    color: variables.$color-text;
    transition: variables.$transition-base;
    
    &:focus {
      outline: none;
      border-color: variables.$color-primary;
      box-shadow: 0 0 0 2px rgba(variables.$color-primary, 0.1);
    }
    
    &::placeholder {
      color: rgba(variables.$color-text-light, 0.5);
    }
  }
  
  &__form-textarea {
    resize: vertical;
    min-height: 120px;
  }
  
  &__form-submit {
    margin-top: variables.$spacing-8;
    
    button {
      min-width: 150px;
    }
  }
  &__form-group {
    &--error {
      .contact__form-label {
        color: variables.$color-error;
      }
    }
  }
  
  &__form-input,
  &__form-textarea {
    &--error {
      border-color: variables.$color-error;
      background-color: rgba(variables.$color-error, 0.02);
      
      &:focus {
        box-shadow: 0 0 0 2px rgba(variables.$color-error, 0.1);
      }
    }
  }
  
  &__form-error {
    font-size: variables.$font-size-xs;
    color: variables.$color-error;
    margin-top: variables.$spacing-1;
  }
  
  // Loading animation for button
  &__button-loading {
    display: flex;
    align-items: center;
    justify-content: center;
    
    &-text {
      margin-right: variables.$spacing-1;
    }
    
    &-dots {
      display: inline-flex;
      
      span {
        animation: dotPulse 1.5s infinite;
        animation-fill-mode: both;
        
        &:nth-child(2) {
          animation-delay: 0.2s;
        }
        
        &:nth-child(3) {
          animation-delay: 0.4s;
        }
      }
      
      @keyframes dotPulse {
        0% {
          opacity: 0.2;
        }
        20% {
          opacity: 1;
        }
        100% {
          opacity: 0.2;
        }
      }
    }
  }
}

// Improve transition for alert messages
.contact__alert {
  animation: slideDown 0.3s ease-out;
  
  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}